<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMYAAABGCAYAAACXK+uFAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADZmlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjgwQkNDNUVDMjgyMDY4MTFCRURDRTEzMURFMDMy
        NzQwIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjUyREQ1NjIwN0IzNDExRTNBMDE1RjJGREQxNkFC
        NThBIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjUyREQ1NjFGN0IzNDExRTNBMDE1RjJGREQxNkFC
        NThBIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUgTWFjaW50b3NoIj4gPHhtcE1N
        OkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6ODJCQ0M1RUMyODIwNjgxMUJFRENF
        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
</value>
  </data>
</root>